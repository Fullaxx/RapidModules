#!/bin/bash
# Brett Kuskie
# fullaxx@gmail.com

set -e

NAME="node"
VERS="v0.12.18"
PKG="${NAME}-${VERS}"
PKGREV=${PKGREV:-rev}
PKGDIR=${PKGDIR:-.}
TARBALL="${PKGDIR}/${PKG}.tar.xz"
RLBFDIR=`dirname $0`
TMP="/tmp/${NAME}-mod-$$"
if [ -e ${TMP} ]; then echo "${TMP} exists, exiting..." >&2; exit 1; fi
if [ `id -u` != "0" ]; then echo "Got Root?"; exit 1; fi

if [ ! -e ${TARBALL} ]; then echo "${TARBALL} doesnt exist, exiting..."; exit 1; fi
tar xvf ${TARBALL}
pushd ${PKG}

# Automatically determine the architecture we're building on:
if [ -z "${ARCH}" ]; then
  case "$( uname -m )" in
    #i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless ${ARCH} is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

LIBDIRSUFFIX=""
if [ "${ARCH}" = "i486" ]; then
  SLKCFLAGS="-march=i486 -mtune=i686"
elif [ "${ARCH}" = "i686" ]; then
  SLKCFLAGS="-march=i686 -mtune=i686"
elif [ "${ARCH}" = "s390" ]; then
  SLKCFLAGS=""
elif [ "${ARCH}" = "x86_64" ]; then
  SLKCFLAGS="-fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS=""
fi

# Fix man page path.
# sed -i 's|share/||' tools/install.py
sed -i 's|share/man/man1|man/man1|g' tools/install.py
sed -i '/var manRoot/ s/"share",//' deps/npm/lib/{,un}build.js

# Fix libdir for 64-bit.
sed -i "s|lib/|lib${LIBDIRSUFFIX}/|g" tools/install.py
sed -i "s/'lib'/'lib${LIBDIRSUFFIX}'/" lib/module.js
sed -i "s|\"lib\"|\"lib${LIBDIRSUFFIX}\"|" deps/npm/lib/npm.js

./configure \
--prefix=/usr \
--shared-openssl \
--shared-zlib

if [ -n "${CFGSLEEPREVIEW}" ]; then
  echo
  echo "Sleeping ${CFGSLEEPREVIEW} seconds to review ..."
  sleep ${CFGSLEEPREVIEW}
fi

# create the TMP directory, compile the code and install to ${TMP}
CFLAGS="${SLKCFLAGS}" CXXFLAGS="${SLKCFLAGS}" make ${MAKEALLCPUS}
mkdir ${TMP}
make ${MAKEALLCPUS} install DESTDIR=${TMP}
ln -s node ${TMP}/usr/bin/nodejs

# Documentation
mkdir -p ${TMP}/usr/doc/${PKG}
cp AUTHORS *.md LICENSE ${TMP}/usr/doc/${PKG}/

# back out and copy this script to the module
popd
mkdir -p ${TMP}/usr/src/rlb
cp $0 ${TMP}/usr/src/rlb

# Add bash completion file for npm.
install -D -m 644 ${RLBFDIR}/RLBFILES/npm.sh ${TMP}/usr/share/bash-completion/completions/npm

# Remove unnecessary files
# find ${TMP}/usr -type d -name '.github' -exec rm -rf {} \;
rm -rf ${TMP}/usr/lib*/node_modules/npm/.github
find ${TMP}/usr -type f -name '.gitmodules' -exec rm -f {} \;
find ${TMP}/usr -type f -name '.travis.yml' -exec rm -f {} \;

# Set NODE_PATH to look for globally installed modules.
mkdir -p ${TMP}/etc/profile.d
cat > ${TMP}/etc/profile.d/node.csh << EOF
#!/bin/csh
setenv NODE_PATH /usr/lib${LIBDIRSUFFIX}/node_modules
EOF
cat > ${TMP}/etc/profile.d/node.sh << EOF
#!/bin/sh
export NODE_PATH=/usr/lib${LIBDIRSUFFIX}/node_modules
EOF
chmod 0755 ${TMP}/etc/profile.d/*

# Why are all these files 0664 ??
#find $TMP/usr/ -type f -perm /022 -exec chmod g-w {} \;

# Make sure this module follows "the rules"
find ${TMP} -type d | xargs chmod -v 755
MANDIR=`find ${TMP} -type d -name man`
if [ x"${MANDIR}" != "x" ]; then
  find ${MANDIR} -type l -name "*.gz" | xargs -r gunzip -f
  find ${MANDIR} ! -type l -name "*.gz" | xargs -r gunzip
fi
find ${TMP} -type f | xargs file | grep ELF | cut -f1 -d: | xargs -r strip --strip-unneeded

# New Rules: No longer keep .la files
for PKGLIBDIR in ${TMP}/lib* ${TMP}/usr/lib*; do
  if [ -d ${PKGLIBDIR} ]; then
    find ${PKGLIBDIR} -type f -name "*.la" | xargs -r rm
  fi
done

# Package up the modules and clean up
dir2xzm ${TMP} ${PKG}-${ARCH}-${PKGREV}.xzm
rm -rf ${PKG}
rm -rf ${TMP}

# EOF
