#!/bin/bash
# Brett Kuskie
# fullaxx@gmail.com

set -e

NAME="qt5-webkit"
VERS="5.9.1"
PKG="${NAME}-${VERS}"
PKGREV=${PKGREV:-rev}
PKGDIR=${PKGDIR:-.}
TARBALL="${PKGDIR}/qtwebkit-opensource-src-${VERS}.tar.xz"
TMP="/tmp/${NAME}-mod-$$"
RLBFDIR=`dirname $0`
if [ "${RLBFDIR}" == "." ]; then RLBFDIR=`pwd`; fi
if [ -e ${TMP} ]; then echo "${TMP} exists, exiting..." >&2; exit 1; fi
if [ `id -u` != "0" ]; then echo "Got Root?"; exit 1; fi

# Activate gperf
if [ ! -x /usr/bin/gperf ]; then
  echo "I need /usr/bin/gperf from gperf-*.txz"
  exit 1
fi

# Activate ruby
if [ ! -x /usr/bin/ruby ]; then
  echo "I need /usr/bin/ruby from ruby-*.txz"
  exit 1
fi

if [ ! -e ${TARBALL} ]; then echo "${TARBALL} doesnt exist, exiting..."; exit 1; fi
tar xvf ${TARBALL}
mv qtwebkit-opensource-src-${VERS} ${PKG}
pushd ${PKG}

# Automatically determine the architecture we're building on:
if [ -z "${ARCH}" ]; then
  case "$( uname -m )" in
    #i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless ${ARCH} is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

LIBDIRSUFFIX=""
if [ "${ARCH}" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "${ARCH}" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "${ARCH}" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "${ARCH}" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
fi

export CFLAGS="${SLKCFLAGS}"
export CXXFLAGS="${SLKCFLAGS}"
export OPENSOURCE_CXXFLAGS="${SLKCFLAGS}"
export QTDIR="/usr/lib${LIBDIRSUFFIX}/qt5"
export LD_LIBRARY_PATH="${QTDIR}/qtbase/lib:${QTDIR}/qttools/lib:${LD_LIBRARY_PATH}"

# Patch in some missing semicolons
patch Source/WebCore/platform/graphics/SegmentedFontData.cpp \
  ${RLBFDIR}/RLBFILES/SegmentedFontData-MissingSemiColon.diff

patch Source/WebCore/dom/Document.cpp \
  ${RLBFDIR}/RLBFILES/Document-MissingSemiColon.diff

# Install path fix for libplatformplugin.so.
# https://bugs.webkit.org/show_bug.cgi?id=117077
patch -p2 < ${RLBFDIR}/RLBFILES/platformplugin-install-path-fix.patch

if [ -d include ]; then
  syncqt.pl -version ${VERS} Source/sync.profile
fi

qmake-qt5 \
PREFIX="/usr" \
QMAKE_CFLAGS+="${SLKCFLAGS}" \
QMAKE_CXXFLAGS+="${SLKCFLAGS}" \
-o Makefile WebKit.pro

# create the TMP directory, compile the code and install to ${TMP}
make ${MAKEALLCPUS}
mkdir -p ${TMP}
make install INSTALL_ROOT=${TMP}

# Fix internal linking for Qt5WebKit.pc
sed -i \
  -e "s|-Wl,-whole-archive -lWebKit1 -Wl,-no-whole-archive -L${PWD}/Source/WebKit[^ ]* ||" \
  -e "s|-Wl,-whole-archive -lWebKit2 -Wl,-no-whole-archive -L${PWD}/Source/WebKit2[^ ]* ||" \
  -e "s|-Wl,-whole-archive -lWebCore -Wl,-no-whole-archive -L${PWD}/Source/WebCore[^ ]* ||" \
  -e "s|-Wl,-whole-archive -lANGLE -Wl,-no-whole-archive -L${PWD}/Source/ThirdParty/ANGLE[^ ]* ||" \
  -e "s|-Wl,-whole-archive -lleveldb -Wl,-no-whole-archive -L${PWD}/Source/ThirdParty/leveldb[^ ]* ||" \
  -e "s|-Wl,-whole-archive -lJavaScriptCore -Wl,-no-whole-archive -L${PWD}/Source/JavaScriptCore[^ ]* ||" \
  -e "s|-Wl,-whole-archive -lWTF -Wl,-no-whole-archive -L${PWD}/Source/WTF[^ ]* ||" \
  ${TMP}/usr/lib${LIBDIRSUFFIX}/pkgconfig/Qt5WebKit.pc

# Fix the path in prl files:
find "${TMP}/usr/lib${LIBDIRSUFFIX}" -type f -name '*.prl' \
  -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d' {} \;

# back out and copy this script to the module
popd
mkdir -p ${TMP}/usr/src/rlb
cp $0 ${TMP}/usr/src/rlb

# Make sure this module follows "the rules"
find ${TMP} -type d | xargs chmod -v 755
MANDIR=`find ${TMP} -type d -name man`
if [ x"${MANDIR}" != "x" ]; then
  find ${MANDIR} -type l -name "*.gz" | xargs -r gunzip -f
  find ${MANDIR} ! -type l -name "*.gz" | xargs -r gunzip
fi
find ${TMP} -type f | xargs file | grep ELF | cut -f1 -d: | xargs -r strip --strip-unneeded

# New Rules: No longer keep .la files
for PKGLIBDIR in ${TMP}/lib* ${TMP}/usr/lib*; do
  if [ -d ${PKGLIBDIR} ]; then
    find ${PKGLIBDIR} -type f -name "*.la" | xargs -r rm
  fi
done

# Package up the modules and clean up
dir2xzm ${TMP} ${PKG}-${ARCH}-${PKGREV}.xzm
rm -rf ${PKG}
rm -rf ${TMP}

# EOF
