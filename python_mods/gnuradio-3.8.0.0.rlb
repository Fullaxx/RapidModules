#!/bin/bash
# Brett Kuskie
# fullaxx@gmail.com

set -e

NAME="gnuradio"
VERS="3.8.0.0"
PKG="${NAME}-${VERS}"
PKGREV=${PKGREV:-rev}
PKGDIR=${PKGDIR:-.}
TARBALL="${PKGDIR}/${PKG}.tar.xz"
TMP="/tmp/${NAME}-mod-$$"
if [ -e ${TMP} ]; then echo "${TMP} exists, exiting..." >&2; exit 1; fi
if [ `id -u` != "0" ]; then echo "Got Root?"; exit 1; fi

if [ ! -e ${TARBALL} ]; then echo "${TARBALL} doesnt exist, exiting..."; exit 1; fi
tar xvf ${TARBALL}
pushd ${PKG}

# Automatically determine the architecture we're building on:
if [ -z "${ARCH}" ]; then
  case "$( uname -m )" in
    #i?86) export ARCH=i486 ;;
    arm*) export ARCH=arm ;;
    # Unless ${ARCH} is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

LIBDIRSUFFIX=""
if [ "${ARCH}" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "${ARCH}" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "${ARCH}" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "${ARCH}" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
fi

# Install docs in the right place - Lets handle this downstairs
# sed -i "s|\${GR_DATA_DIR}/doc|doc|" CMakeLists.txt

PYVERS=$(python3 -V 2>&1 | cut -f 2 -d' ' | cut -f 1-2 -d.)
mkdir build
pushd build
cmake \
-DCMAKE_C_FLAGS:STRING="${SLKCFLAGS}" \
-DCMAKE_CXX_FLAGS:STRING="${SLKCFLAGS}" \
-DCMAKE_CXX_STANDARD=11 \
-DPYTHON_EXECUTABLE=/usr/bin/python${PYVERS} \
-DPYTHON_INCLUDE_DIR=/usr/include/python${PYVERS} \
-DPYTHON_LIBRARY=/usr/lib${LIBDIRSUFFIX}/libpython${PYVERS}.so \
-DCMAKE_INSTALL_PREFIX=/usr \
-DSYSCONFDIR=/etc \
-DLIB_SUFFIX=${LIBDIRSUFFIX} \
-DCMAKE_MODULES_DIR=lib${LIBDIRSUFFIX}/cmake/${NAME} \
-DGR_PYTHON_DIR=/usr/lib${LIBDIRSUFFIX}/python${PYVERS}/site-packages \
-DENABLE_GRC=ON \
-DENABLE_GR_QTGUI=ON \
-DENABLE_GR_AUDIO=OFF \
-DENABLE_GR_UHD=OFF \
-DENABLE_GR_VOCODER=OFF \
-DENABLE_GR_VIDEO_SDL=OFF \
-DENABLE_GR_ZEROMQ=OFF \
-DENABLE_SPHINX=OFF \
-DCMAKE_BUILD_TYPE=Release ..

if [ -n "${PAUSEFORREVIEW}" ]; then
  echo
  echo "Press any key to continue ..."
  read PAUSEFORREVIEW
fi

make ${MAKEALLCPUS}
mkdir ${TMP}
make install DESTDIR=${TMP}
popd

# Documentation
mkdir ${TMP}/usr/doc
mv ${TMP}/usr/share/doc/${PKG} ${TMP}/usr/doc
rmdir ${TMP}/usr/share/doc
cp COPYING README.md README.hacking CHANGELOG.md ${TMP}/usr/doc/${PKG}/

# back out and copy this script to the module
popd
mkdir -p ${TMP}/usr/src/rlb
cp $0 ${TMP}/usr/src/rlb

# Make sure this module follows "the rules"
find ${TMP} -type d | xargs chmod -v 755
MANDIR=`find ${TMP} -type d -name man`
if [ x"${MANDIR}" != "x" ]; then
  find ${MANDIR} -type l -name "*.gz" | xargs -r gunzip -f
  find ${MANDIR} ! -type l -name "*.gz" | xargs -r gunzip
fi
find ${TMP} -type f | xargs file | grep ELF | cut -f1 -d: | xargs -r strip --strip-unneeded

# New Rules: No longer keep .la files
for PKGLIBDIR in ${TMP}/lib* ${TMP}/usr/lib*; do
  if [ -d ${PKGLIBDIR} ]; then
    find ${PKGLIBDIR} -type f -name "*.la" | xargs -r rm
  fi
done

# Package up the modules and clean up
dir2xzm ${TMP} ${PKG}-${ARCH}-${PKGREV}.xzm
rm -rf ${PKG}
rm -rf ${TMP}

# EOF
