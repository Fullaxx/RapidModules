#!/bin/bash
# Brett Kuskie
# fullaxx@gmail.com

set -e

NAME="docker"
VERS="18.06.1-ce"
PKG="${NAME}-${VERS}"
PKGREV=${PKGREV:-rev}
PKGDIR=${PKGDIR:-.}
TARBALL="${PKGDIR}/${PKG}.tgz"
TMP="/tmp/${NAME}-mod-$$"
if [ -e ${TMP} ]; then echo "${TMP} exists, exiting..." >&2; exit 1; fi
if [ `id -u` != "0" ]; then echo "Got Root?"; exit 1; fi

if [ ! -e ${TARBALL} ]; then echo "${TARBALL} doesnt exist, exiting..."; exit 1; fi
mkdir -p ${TMP}/usr ${TMP}/etc/rc.d
tar xvf ${TARBALL} -C ${TMP}/usr
mv ${TMP}/usr/docker ${TMP}/usr/bin
chown -R root.root ${TMP}/usr/bin
chmod 0755 ${TMP}/usr/bin/*

mkdir -p ${TMP}/usr/src/rlb
cp $0 ${TMP}/usr/src/rlb

cat << EOFF > ${TMP}/etc/rc.d/rc.rl_docker
#!/bin/bash

# /var/lib/docker should probably be backed by a HD
# but until the user specifies one, this will get us running
mkdir /var/lib/docker
/sbin/mount tmpfs /var/lib/docker -t tmpfs

# Increase open files limit for which docker image?
# ulimit -n 16384

# Update certs just in case
# Why isn't this done on startup?
# This should probably be moved to a more system level location
/usr/sbin/update-ca-certificates

# Docker Start
echo "Starting Docker: /usr/bin/dockerd &"
/usr/bin/dockerd -s aufs >/var/log/docker.log 2>&1 &
EOFF
chmod 0755 ${TMP}/etc/rc.d/rc.rl_docker

# https://docs.docker.com/registry/insecure/
# If we dont have certain root certs, allow pull over HTTP
# If you need this, rename this file to daemon.json

mkdir -p "${TMP}/etc/docker"
cat << EOFF > ${TMP}/etc/docker/ir.daemon.json
{
  "insecure-registries": ["registry-1.docker.io"]
}
EOFF

# https://docs.docker.com/storage/storagedriver/aufs-driver/
cat << EOFF > ${TMP}/etc/docker/aufs.sd.daemon.json
{
  "storage-driver": "aufs"
}
EOFF

# https://docs.docker.com/storage/storagedriver/btrfs-driver/
cat << EOFF > ${TMP}/etc/docker/btrfs.sd.daemon.json
{
  "storage-driver": "btrfs"
}
EOFF

# https://docs.docker.com/storage/storagedriver/device-mapper-driver/
cat << EOFF > ${TMP}/etc/docker/dm.sd.daemon.json
{
  "storage-driver": "devicemapper",
  "storage-opts": [
    "dm.thinpooldev=/dev/mapper/thin-pool",
    "dm.use_deferred_deletion=true",
    "dm.use_deferred_removal=true"
  ]
}
EOFF

# https://docs.docker.com/storage/storagedriver/overlayfs-driver/
cat << EOFF > ${TMP}/etc/docker/o2.sd.daemon.json
{
  "storage-driver": "overlay2"
}
EOFF

# Package up the modules and clean up
dir2xzm ${TMP} ${PKG}-x86_64-${PKGREV}.xzm
rm -rf ${PKG}
rm -rf ${TMP}

# EOF
